#!/usr/bin/with-contenv bash
# shellcheck shell=bash

umask "${UMASK}"

function getPref {
    local key="$1"

    xmlstarlet sel -T -t -m "/Preferences" -v "@${key}" -n "${prefFile}"
}

function setPref {
    local key="$1"
    local value="$2"

    count="$(xmlstarlet sel -t -v "count(/Preferences/@${key})" "${prefFile}")"
    count=$((count + 0))
    if [[ $count -gt 0 ]]; then
        xmlstarlet ed --inplace --update "/Preferences/@${key}" -v "${value}" "${prefFile}"
    else
        xmlstarlet ed --inplace --insert "/Preferences"  --type attr -n "${key}" -v "${value}" "${prefFile}"
    fi
}

prefFile="${CONFIG_DIR}/Preferences.xml"

# Create empty Preferences.xml file if it doesn't exist already
if [[ ! -f "${prefFile}" ]]; then
    echo "Creating empty Preferences.xml..."
    mkdir -p "$(dirname "${prefFile}")"
    cat > "${prefFile}" <<-EOF
<?xml version="1.0" encoding="utf-8"?>
<Preferences/>
EOF
    chown -R hotio:hotio "$(dirname "${prefFile}")"
fi

# Setup Server's client identifier
serial="$(getPref "MachineIdentifier")"
if [[ -z "${serial}" ]]; then
    serial="$(cat /proc/sys/kernel/random/uuid)"
    setPref "MachineIdentifier" "${serial}"
fi
clientId="$(getPref "ProcessedMachineIdentifier")"
if [[ -z "${clientId}" ]]; then
    clientId="$(echo -n "${serial}- Plex Media Server" | sha1sum | cut -b 1-40)"
    setPref "ProcessedMachineIdentifier" "${clientId}"
fi

# Get server token and only turn claim token into server token if we have former but not latter.
token="$(getPref "PlexOnlineToken")"
if [[ -n "${PLEX_CLAIM}" ]] && [[ -z "${token}" ]]; then
    echo "Attempting to obtain server token from claim token..."
    loginInfo="$(curl -fsSL -X POST \
        -H 'X-Plex-Client-Identifier: '"${clientId}" \
        -H 'X-Plex-Product: Plex Media Server'\
        -H 'X-Plex-Version: 1.1' \
        -H 'X-Plex-Provides: server' \
        -H 'X-Plex-Platform: Linux' \
        -H 'X-Plex-Platform-Version: 1.0' \
        -H 'X-Plex-Device-Name: PlexMediaServer' \
        -H 'X-Plex-Device: Linux' \
        "https://plex.tv/api/claim/exchange?token=${PLEX_CLAIM}")"
    token="$(echo "$loginInfo" | sed -n 's/.*<authentication-token>\(.*\)<\/authentication-token>.*/\1/p')"

    if [[ "$token" ]]; then
        echo "Token obtained successfully!"
        setPref "PlexOnlineToken" "${token}"
    fi
fi

# Set other preferences
if [[ -n "${ADVERTISE_IP}" ]]; then
    echo "Setting customConnections to: ${ADVERTISE_IP}"
    setPref "customConnections" "${ADVERTISE_IP}"
fi

if [[ -n "${ALLOWED_NETWORKS}" ]]; then
    echo "Setting allowedNetworks to: ${ALLOWED_NETWORKS}"
    setPref "allowedNetworks" "${ALLOWED_NETWORKS}"
fi

# Set transcoder directory if not yet set
if [[ -z "$(getPref "TranscoderTempDirectory")" ]]; then
    echo "Setting TranscoderTempDirectory to: /transcode"
    setPref "TranscoderTempDirectory" "/transcode"
fi

# Remove pid file
rm -f "${CONFIG_DIR}/plexmediaserver.pid"
